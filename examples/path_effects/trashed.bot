"""
Trashed text with path filters
Originally from <http://nodebox.net/code/index.php/Path_Filters>
"""

size(550, 300)
background(0.23, 0.21, 0.15)

font("DejaVu Sans", 175)
path = textpath("trash", 40, 200)


def trash(path, pt0, pt1, amount=0.2, number_of_lines=20, max_length=3.0):
    # Add trash between two points.
    # amount: controls how much of the path is trashed.
    # n: the number of lines to insert.
    # max_length: the maximum length of inserted lines.
    if random() < amount:
        for i in range(random(number_of_lines)):
            pt0.x += random(-max_length, max_length)
            pt0.y += random(-max_length, max_length)
            path.lineto(pt0.x, pt0.y)

    path.lineto(pt1.x, pt1.y)

    # Create a blot/speckle near the current point.
    # We have to add this to the path at the end.
    if random() < amount * 0.3:
        x = pt1.x - random(-max_length * 4, max_length * 4)
        y = pt1.y - random(-max_length * 2, max_length * 2)
        blot = BezierPath()
        blot.moveto(x, y)
        for i in range(random(number_of_lines)):
            x += random(-max_length, max_length)
            y += random(-max_length, max_length)
            blot.lineto(x, y)
        blot.closepath()
        return blot


extensions = []
for contour in path.contours:
    prev_pt = None
    number_of_points = contour.length / 8
    for pt in contour.points(number_of_points):
        if not prev_pt:
            path.moveto(pt.x, pt.y)
        elif pt.cmd == MOVETO:
            path.moveto(pt.x, pt.y)
        else:
            blot = trash(path, prev_pt, pt)
            if blot:
                extensions.append(blot)
        prev_pt = pt

for blot in extensions:
    path.extend(blot)

fill(1)
nostroke()
drawpath(path)
