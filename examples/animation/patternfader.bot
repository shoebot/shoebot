"""
Pattern fader
Built on the Hypnoval example by Simon Budig
"""

# Because we use some math functions, we import sinus and cosinus functions
# from the math library.
from math import sin, pi

size(400, 400)

# This method indicates this script will be an animation.
speed(30)


# The setup method is called once, at the start of the animation.
# Here, it initializes the counter.
def setup():
    global counter
    counter = 0.0


# The draw method is called for every frame.
# Here, it draws the oval grid.
def draw():
    global counter
    # We use an internal counter that modifies each
    # oval slightly
    s = 0.0
    # Move the canvas a bit.
    transform(CORNER)
    scale(20, 20)
    translate(0, 0)

    # Draw a grid of 5 by 5.
    for x, y in grid(21, 24, 1, 1):
        # Oscillate the fill color.

        # Draw the oval.
        xify = (float(x + counter) / 8) % 1
        xify = abs((2 * xify - 1) ** 2)

        yify = (float(y + counter) / 8 * 0.866) % 1
        yify = abs((2 * yify - 1) ** 2)

        r = abs(xify - yify)

        r = 0.9 - r * 0.6
        fill(0, 0, (1 - (sin(r * 2 * pi) + 1) / 2.0) ** 2)

        circle(x + (y % 2) * 0.5 - r / 2, y * 0.866 - r / 2, r)
        # Increase the counter so that every oval looks a bit different.
        s += 0.03

    # Increase the global counter.
    counter += 0.1
